!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("./dist/index",[],n):"object"==typeof exports?exports["./dist/index"]=n():e["./dist/index"]=n()}(global,function(){return function(e){var n={};function r(t){if(n[t])return n[t].exports;var o=n[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=n,r.d=function(e,n,t){r.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:t})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="",r.w={},r(r.s=2)}([function(e,n){e.exports=require("babylon")},function(e,n,r){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.promisifyAST=n.promisifyCode=void 0;const t="\nconst kCustomPromisifiedSymbol = Symbol('util.promisify.custom');\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\n\nfunction promisify(original) {\n  let promisifyContext;\n  if (typeof original !== 'function')\n    throw new errors.TypeError('ERR_INVALID_ARG_TYPE', 'original', 'Function');\n\n  if (original[kCustomPromisifiedSymbol]) {\n    const fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new errors.TypeError('ERR_INVALID_ARG_TYPE',\n                                 'util.promisify.custom',\n                                 'Function',\n                                 fn);\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  // Names to create an object from in case the callback receives multiple\n  // arguments, e.g. ['stdout', 'stderr'] for child_process.exec.\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\n\n  function fn(...args) {\n    const promise = new Promise(function (promiseResolve, promiseReject) {\n      try {\n        original.call(promisifyContext || this, ...args, (err, ...values) => {\n          if (err) {\n            promiseReject(err);\n          } else if (argumentNames !== undefined && values.length > 1) {\n            const obj = {};\n            for (var i = 0; i < argumentNames.length; i++)\n              obj[argumentNames[i]] = values[i];\n            promiseResolve(obj);\n          } else {\n            promiseResolve(values[0]);\n          }\n        });\n      } catch (err) {\n        promiseReject(err);\n      }\n    });\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  Object.defineProperty(fn, 'bind', {\n    value: context => {\n      promisifyContext = context;\n      return fn;\n    }, enumerable: false, writable: false, configurable: true\n  });\n\n  Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    Object.getOwnPropertyDescriptors(original)\n  );\n}\n\npromisify.custom = kCustomPromisifiedSymbol;\n",o=(0,r(0).parse)(t,{sourceType:"script"});n.promisifyCode=t,n.promisifyAST=o},function(e,n,r){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(){return{visitor:{CallExpression:{enter:f(i,2)},ImportDeclaration:{enter:f(s,0)}}}};var t=r(1);const o=parseInt(process.version[1],10)>=8,i=e=>{const n=e.get("callee");if(!n.isIdentifier()||!n.equals("name","require"))return!1;const r=e.get("arguments")[0];if(r&&r.isStringLiteral()&&e.parentPath.isVariableDeclarator()&&"util"===r.node.value){const n=e.parentPath;if(n.isVariableDeclarator()&&"ObjectPattern"===n.node.id.type&&"promisify"===n.node.id.properties[0].key.name)return!0}return!1},s=e=>"util"===e.node.source.value&&"promisify"===e.node.specifiers[0].imported.name,f=(e,n)=>r=>{if(!o&&e(r)){let e=r;for(let r=0;r<n;r++)e=e.parentPath;e.insertBefore(t.promisifyAST),e.remove()}}}])});
//# sourceMappingURL=index.js.map